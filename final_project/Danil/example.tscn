[gd_scene load_steps=22 format=3 uid="uid://ds1c55uv08k80"]

[ext_resource type="PackedScene" uid="uid://ba5celflb58ax" path="res://scenes/game_elements/character.tscn" id="3_3dfww"]
[ext_resource type="PackedScene" uid="uid://c4ome1rfnjcj1" path="res://scenes/assets/lights/torch_mounted.tscn" id="3_ui72h"]
[ext_resource type="PackedScene" uid="uid://bp8us8trdoxn8" path="res://scenes/assets/lights/torch.tscn" id="4_1sjxa"]
[ext_resource type="PackedScene" uid="uid://difxijpdmy4rm" path="res://scenes/assets/floors/floor_dirt_large.tscn" id="4_64ib8"]
[ext_resource type="PackedScene" uid="uid://bq0dcihhlbc05" path="res://scenes/assets/key/key.tscn" id="5_0r63w"]
[ext_resource type="PackedScene" uid="uid://ctrwoktx44fox" path="res://scenes/assets/stairs/stairs.tscn" id="6_oy027"]
[ext_resource type="PackedScene" uid="uid://6k4syrvb2v3a" path="res://scenes/assets/walls/wall.tscn" id="7_p53yv"]
[ext_resource type="PackedScene" uid="uid://cet0ahagu3cnk" path="res://scenes/assets/walls/wall_corner_small.tscn" id="8_ajg7v"]
[ext_resource type="PackedScene" uid="uid://b2q4nan23yur2" path="res://scenes/assets/walls/wall_doorway.tscn" id="9_cvlg2"]
[ext_resource type="PackedScene" uid="uid://7op6ogn2cmrx" path="res://scenes/assets/walls/wall_window_open.tscn" id="10_3d7xd"]
[ext_resource type="PackedScene" uid="uid://ch4628slb0l0l" path="res://scenes/assets/walls/wall_half.tscn" id="11_t6bnw"]
[ext_resource type="PackedScene" uid="uid://bu0lqt11c2ydw" path="res://scenes/assets/extras/chest.tscn" id="12_cvlg2"]
[ext_resource type="PackedScene" uid="uid://gwdsosqtypm0" path="res://scenes/assets/extras/chair.tscn" id="13_3d7xd"]
[ext_resource type="PackedScene" uid="uid://giu4ajqq0pig" path="res://scenes/assets/extras/bed_frame.tscn" id="14_t6bnw"]
[ext_resource type="PackedScene" uid="uid://dgavabl80atr2" path="res://scenes/assets/extras/banners/banner_green.tscn" id="15_klubj"]
[ext_resource type="Texture2D" uid="uid://c47qyvawswp1r" path="res://assets/textures/hatch_down_left.jpg" id="16_3d7xd"]
[ext_resource type="Texture2D" uid="uid://0sen4lckfksv" path="res://assets/textures/hatch_down_right.jpg" id="17_t6bnw"]

[sub_resource type="CylinderMesh" id="CylinderMesh_cvlg2"]

[sub_resource type="PlaneMesh" id="PlaneMesh_cvlg2"]
flip_faces = true
orientation = 2

[sub_resource type="Shader" id="Shader_boyoy"]
code = "shader_type spatial;

//#define COLOR_OUTLINE
uniform sampler2D scr_tex: hint_screen_texture;
uniform sampler2D normal_tex: hint_normal_roughness_texture;
uniform sampler2D depth_tex: hint_depth_texture;

uniform float count_color: hint_range(1.0, 10.0, 0.1);
uniform float tresh_hold_n : hint_range(0.0, 1.0, 0.01);
uniform float tresh_hold_d : hint_range(0.0, 1.0, 0.01);
uniform float coff : hint_range(0.0, 10.0, 0.01);

uniform sampler2D hatch_down_left;
uniform sampler2D hatch_down_right;
render_mode unshaded;
//INV_PROJECTION_MATRIX * vec4((SCREEN_UV+vec2(-px_size_x, -px_size_y))*2.0-1.0, 
//texture(depth_tex, SCREEN_UV+vec2(px_size_x, -px_size_y)).r, 1.0);
vec3 texel_fetch(sampler2D tex, vec2 size, vec2 coord){
	float x = fract(coord.x/size.x) * size.x;
	float y = fract(coord.y/size.y) * size.y;
	return texelFetch(tex, ivec2(int(x), int(y)), 0).rgb;
}

vec3 linear_depth(mat4 M, vec2 SUV, vec2 shift){
	vec4 v = M * vec4((vec2(SUV.x, SUV.y) + vec2(shift.x, shift.y))*2.0-1.0, texture(depth_tex, SUV + shift).r, 1.0);
	return v.xyz/v.w;
}

void vertex() {
	POSITION = vec4(VERTEX.x, VERTEX.y, 1.0, 1.0);
}

void fragment() {
	vec2 tex_size = vec2(float(textureSize(hatch_down_left, 0).x), float(textureSize(hatch_down_left, 0).y));
	float px_size_x = 1.0/VIEWPORT_SIZE.x;
	float px_size_y = 1.0/VIEWPORT_SIZE.y;

	//ALBEDO = vec3(1.0) * (floor(clamp(gray, 0.0, 1.0)*count_color)/count_color);
	mat3 Gx = mat3(vec3(-1, -2, -1), vec3(0, 0, 0), vec3(1, 2, 1));
	mat3 Gy = mat3(vec3(-1, 0, 1), vec3(-2, 0, 2), vec3(-1, 0, 1));
	float Gxx = 0.0;
	float Gyy = 0.0;
	#ifdef COLOR_OUTLINE
	for(float i=-1.0; i<=1.0; i++){
		for(float j=-1.0; j<=1.0; j++){
			float gray_scale = dot(texture(normal_tex, vec2(x, y) + vec2(px_size_x * i, px_size_y*j)).xyz, vec3(0.2126, 0.7152, 0.07));
			Gxx += gray_scale * Gx[int(i)+1][int(j)+1];
			Gyy += gray_scale * Gy[int(i)+1][int(j)+1];
		}
	}
	ALBEDO = vec3(clamp(sqrt(pow(Gxx, 2) + pow(Gyy, 2)), 0.0, 1.0));
	#endif
	
	//vec3 v1 =  texture(depth_tex, SCREEN_UV + vec2(-px_size_x, -px_size_y)).rgb;
	//vec3 previous_depth;
	//for(float j=-1.0; j<=1.0; j++){
		//previous_depth = linear_depth(INV_PROJECTION_MATRIX, SCREEN_UV, vec2(px_size_x, px_size_y*j));
		//for(float i=-1.0; i<=1.0; i++){
			//vec2 shift_pixels = vec2(px_size_x * i, px_size_y*j);
			//vec3 normal = texture(normal_tex, SCREEN_UV + shift_pixels).xyz;
			//vec4 this_depth_pixel = texture(depth_tex, SCREEN_UV + shift_pixels);
			//
			//vec3 a = linear_depth(INV_PROJECTION_MATRIX, SCREEN_UV, shift_pixels);
			//
			//float gray_scale_d = dot(this_depth_pixel.xyz , normal) * 20.0;
			//float gray_scale_n = distance(normal, v1);
			//
			//float gray_scale =  length(gray_scale_d);
			//Gxx += gray_scale * Gx[int(j)+1][int(i)+1];
			//Gyy += gray_scale * Gy[int(j)+1][int(i)+1];
			//
			//v1 = texture(depth_tex, SCREEN_UV + shift_pixels).rgb;
			//previous_depth = linear_depth(INV_PROJECTION_MATRIX, SCREEN_UV, shift_pixels);
		//}
	//}
	//ALBEDO = vec3(step(0.1,sqrt(pow(Gxx, 2) + pow(Gyy, 2))));
	//ALBEDO = texture(normal_tex, SCREEN_UV).xyz;
	
	
	for(int i=0; i<3; i++){
		vec3 a = linear_depth(INV_PROJECTION_MATRIX, SCREEN_UV, vec2(-px_size_x,  float(i-1)*px_size_y)*coff);
		vec3 b = linear_depth(INV_PROJECTION_MATRIX, SCREEN_UV, vec2(px_size_x, float(i-1)*px_size_y)*coff);
		vec3 normal = texture(normal_tex, vec2(SCREEN_UV.x + px_size_x, SCREEN_UV.y + float(i-1)*px_size_y)).xyz *2.0 -1.0;
		if(a.z < -1000.0){
				Gxx +=0.0;
				ALPHA=0.0;
			}
		else
		Gxx += dot(a-b, normal) * Gx[0][i]/* * Gx[2][i]*/;
		
	}
	for(int i=0; i<3; i++){
		vec3 a = linear_depth(INV_PROJECTION_MATRIX, SCREEN_UV, vec2(float(i-1)*px_size_x, - px_size_y)*coff);
		vec3 b = linear_depth(INV_PROJECTION_MATRIX, SCREEN_UV, vec2(float(i-1)*px_size_x, px_size_y)*coff);
		vec3 normal = texture(normal_tex, vec2(SCREEN_UV.x + float(i-1)*px_size_x, SCREEN_UV.y + px_size_y)).xyz * 2.0 - 1.0;
		if(a.z < -1000.0){
			Gyy +=0.0;
			ALPHA=0.0;
		}
		else
			Gyy += dot(a-b, normal) * Gy[i][0];
	}
	float grey_d = step(tresh_hold_d, sqrt(pow(Gxx, 2)+ pow(Gyy, 2)));
	
	vec3 v1 = texture(normal_tex, SCREEN_UV + vec2(-px_size_x, -px_size_y)).rgb;
	Gxx = 0.0;
	Gyy=0.0;
	for(float j=-1.0; j<=1.0; j++){
		for(float i=-1.0; i<=1.0; i++){
			vec2 shift_pixels = vec2(px_size_x * i, px_size_y*j)*coff;
			vec3 normal = texture(normal_tex, SCREEN_UV + shift_pixels).xyz;
			
			float gray_scale_n = distance(normal, v1);
			
			float gray_scale =  gray_scale_n;
			Gxx += gray_scale * Gx[int(j)+1][int(i)+1];
			Gyy += gray_scale * Gy[int(j)+1][int(i)+1];
			
			v1 = texture(normal_tex, SCREEN_UV + shift_pixels).rgb;
		}
	}
	//ALBEDO = vec3(clamp(grey_d +step(tresh_hold_n, sqrt(pow(Gxx, 2) + pow(Gyy, 2))*1.0), 0.0, 1.0));
	float albedo = 1.0 - clamp(grey_d +step(tresh_hold_n, sqrt(pow(Gxx, 2) + pow(Gyy, 2))*1.0), 0.0, 1.0);
	float color_grey = dot(texture(scr_tex, SCREEN_UV).rgb, vec3(0.2126, 0.7152, 0.07));
	if(albedo == 1.0){
		ALBEDO = texture(scr_tex, SCREEN_UV).rgb;
	}
	else{
		ALBEDO = vec3(albedo);
	}
	if(color_grey < 0.05){
		float depth = 70.0 * texture(depth_tex, SCREEN_UV).r; 
		ALBEDO = texel_fetch(hatch_down_left, tex_size, FRAGCOORD.xy/ depth).rgb * texture(scr_tex, SCREEN_UV).rgb;
		if(color_grey < 0.02){
			ALBEDO = texel_fetch(hatch_down_left, tex_size, FRAGCOORD.xy / depth).rgb *texel_fetch(hatch_down_right, tex_size, FRAGCOORD.xy/ depth).rgb * texture(scr_tex, SCREEN_UV).rgb;
		}
	}
	
	
	
}	"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_3d7xd"]
render_priority = 0
shader = SubResource("Shader_boyoy")
shader_parameter/count_color = 10.0
shader_parameter/tresh_hold_n = 0.65
shader_parameter/tresh_hold_d = 0.16
shader_parameter/coff = 1.0
shader_parameter/hatch_down_left = ExtResource("16_3d7xd")
shader_parameter/hatch_down_right = ExtResource("17_t6bnw")

[node name="Example" type="Node3D"]

[node name="CharacterBody3D" parent="." instance=ExtResource("3_3dfww")]
transform = Transform3D(0.642788, 0, 0.766044, 0, 1, 0, -0.766044, 0, 0.642788, 0.79622, 1.2, 3)

[node name="floor_dirt_large3" parent="." instance=ExtResource("4_64ib8")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -3.2, 0, 1)

[node name="floor_dirt_large4" parent="." instance=ExtResource("4_64ib8")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.8, 0, 1)

[node name="floor_dirt_large5" parent="." instance=ExtResource("4_64ib8")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 4.8, 0, 1)

[node name="floor_dirt_large6" parent="." instance=ExtResource("4_64ib8")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -3.2, 0, 5)

[node name="floor_dirt_large7" parent="." instance=ExtResource("4_64ib8")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.8, 0, 5)

[node name="floor_dirt_large8" parent="." instance=ExtResource("4_64ib8")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 4.8, 0, 5)

[node name="floor_dirt_large9" parent="." instance=ExtResource("4_64ib8")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 12.8, 8, 2.5)

[node name="floor_dirt_large10" parent="." instance=ExtResource("4_64ib8")]
transform = Transform3D(1, 1.74846e-07, 0, -1.74846e-07, 1, 0, 0, 0, 1, 16.8, 8, 2.5)

[node name="floor_dirt_large11" parent="." instance=ExtResource("4_64ib8")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 20.8, 8, 2.5)

[node name="floor_dirt_large12" parent="." instance=ExtResource("4_64ib8")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 12.8, 8, 6.5)

[node name="floor_dirt_large13" parent="." instance=ExtResource("4_64ib8")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 16.8, 8, 6.5)

[node name="floor_dirt_large14" parent="." instance=ExtResource("4_64ib8")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 20.8, 8, 6.5)

[node name="torch_mounted" parent="." instance=ExtResource("3_ui72h")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -3, 1, -1)

[node name="torch" parent="." instance=ExtResource("4_1sjxa")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.8, 0.4, 0)

[node name="key" parent="." instance=ExtResource("5_0r63w")]
transform = Transform3D(1, 2.98023e-08, 0, 0, 1, 0, 0, 1.49012e-08, 1, -2, 0.3, 1.19209e-07)

[node name="stairs" parent="." instance=ExtResource("6_oy027")]
transform = Transform3D(-5.96046e-08, 5.96046e-08, -1, -1.49012e-08, 1, 0, 1, 1.49012e-08, 1.19209e-07, 6.8, 2.38419e-07, 4.5)

[node name="stairs2" parent="." instance=ExtResource("6_oy027")]
transform = Transform3D(-5.96046e-08, 1.78814e-07, -1, -1.49012e-08, 1, 0, 1, 2.98023e-08, 1.19209e-07, 10.8, 4, 4.5)

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="."]
transform = Transform3D(0.707107, -0.353553, -0.612372, 0, -0.866025, 0.5, -0.707107, -0.353553, -0.612372, 0, 4, 0)

[node name="wall" parent="." instance=ExtResource("7_p53yv")]
transform = Transform3D(-0.00766191, 0, -0.999971, 0, 1, 0, 0.999971, 0, -0.00766191, 23.3, 8, 3)

[node name="wall2" parent="." instance=ExtResource("7_p53yv")]
transform = Transform3D(-0.999971, 0, 0.00766195, 0, 1, 0, -0.00766195, 0, -0.999971, 20.3, 8, -2.38419e-07)

[node name="wall_corner_small" parent="." instance=ExtResource("8_ajg7v")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 23.3, 8, 0)

[node name="wall_corner_small4" parent="." instance=ExtResource("8_ajg7v")]
transform = Transform3D(-4.37114e-08, 0, -1, 0, 1, 0, 1, 0, -4.37114e-08, 23.3, 8, 7.8)

[node name="wall_corner_small3" parent="." instance=ExtResource("8_ajg7v")]
transform = Transform3D(-1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1, 13.3, 8, 7.8)

[node name="wall_corner_small2" parent="." instance=ExtResource("8_ajg7v")]
transform = Transform3D(6.70552e-08, 0, 1, 0, 1, 0, -1, 0, 6.70552e-08, 13.3, 8, -3.57628e-07)

[node name="wall_doorway" parent="." instance=ExtResource("9_cvlg2")]
transform = Transform3D(-4.37114e-08, 0, -1, 0, 1, 0, 1, 0, -4.37114e-08, 13.3, 8, 4.8)

[node name="wall_window_open" parent="." instance=ExtResource("10_3d7xd")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 16.3, 8, 0)

[node name="wall3" parent="." instance=ExtResource("7_p53yv")]
transform = Transform3D(-0.999971, 0, 0.00766195, 0, 1, 0, -0.00766195, 0, -0.999971, 20.3, 8, 7.8)

[node name="wall_window_open2" parent="." instance=ExtResource("10_3d7xd")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 16.3, 8, 7.8)

[node name="wall_half" parent="." instance=ExtResource("11_t6bnw")]
transform = Transform3D(0.00392694, 0, -0.999992, 0, 1, 0, 0.999992, 0, 0.00392694, 13.3, 8, 0.8)

[node name="wall_half2" parent="." instance=ExtResource("11_t6bnw")]
transform = Transform3D(0.00392694, 0, -0.999992, 0, 1, 0, 0.999992, 0, 0.00392694, 23.3, 8, 4.96985)

[node name="chest" parent="." instance=ExtResource("12_cvlg2")]
transform = Transform3D(-4.37114e-08, 0, -1, 0, 1, 0, 1, 0, -4.37114e-08, 22, 8, 4)

[node name="chair" parent="." instance=ExtResource("13_3d7xd")]
transform = Transform3D(-4.37114e-08, 0, -1, 0, 1, 0, 1, 0, -4.37114e-08, 18, 8, 6.9)

[node name="bed_frame" parent="." instance=ExtResource("14_t6bnw")]
transform = Transform3D(-4.37114e-08, 0, -1, 0, 1, 0, 1, 0, -4.37114e-08, 21.3, 8, 1.3)

[node name="banner_green" parent="." instance=ExtResource("15_klubj")]
transform = Transform3D(-1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1, 19.7, 8, 7.7)

[node name="OmniLight3D" type="OmniLight3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 17.4, 10, 3)
light_energy = 5.041
omni_range = 6.433

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 3, 2, 0)
mesh = SubResource("CylinderMesh_cvlg2")

[node name="postprocessing" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 5.24537e-08, 0.00950301, -0.6)
extra_cull_margin = 16384.0
mesh = SubResource("PlaneMesh_cvlg2")
skeleton = NodePath("../..")
surface_material_override/0 = SubResource("ShaderMaterial_3d7xd")

[editable path="wall2"]
[editable path="wall_corner_small"]
