[gd_scene load_steps=8 format=3 uid="uid://2bbr08h7yq5a"]

[ext_resource type="Script" uid="uid://q70pk0s0ywpt" path="res://scripts/collectable/apple.gd" id="1_u6n14"]
[ext_resource type="Texture2D" uid="uid://cm18wfevcagwu" path="res://assets/sprite_pack/Items/Fruits/Apple.png" id="2_gi34o"]

[sub_resource type="Shader" id="Shader_u6n14"]
code = "shader_type canvas_item;

uniform float sizeDown;
uniform float maxRotAngle;

void vertex() {
	// Called for every vertex the material is visible on.
	float sizeD = sizeDown * (abs(sin(TIME/2.0))+0.6);
	VERTEX.y /= sizeD;
	VERTEX.y += 14.0*sizeD*0.1;
	
	float angle = radians(maxRotAngle) * cos(TIME/2.0);
	vec3 pos = vec3(VERTEX.x,VERTEX.y,1.0);
	mat3 rotMat = mat3(vec3(cos(angle),sin(angle),0.0),vec3(-sin(angle),cos(angle),0.0),vec3(0.0,0.0,1.0));
	//mat3 sizeMat = mat3(vec3(size.x+abs(sin(TIME))*sizeMult,0.0,0.0),vec3(0.0,size.y+abs(sin(TIME))*sizeMult,0.0),vec3(0.0,0.0,1.0));
	vec3 newPos = (rotMat)*pos;
	VERTEX = newPos.xy;
}

void fragment() {
	// Called for every pixel the material is visible on.
	//vec4 col = texture(TEXTURE,vec2(UV.x,UV.y-0.5));
	//COLOR = col;
}

//void light() {
//	// Called for every pixel for every light affecting the CanvasItem.
//	// Uncomment to replace the default light processing function with this one.
//}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_gi34o"]
shader = SubResource("Shader_u6n14")
shader_parameter/sizeDown = 1.5
shader_parameter/maxRotAngle = 20.0

[sub_resource type="RectangleShape2D" id="RectangleShape2D_ch0ce"]
size = Vector2(24, 24)

[sub_resource type="Animation" id="Animation_6o2ki"]
resource_name = "summon"

[sub_resource type="AnimationLibrary" id="AnimationLibrary_dqefk"]
_data = {
&"summon": SubResource("Animation_6o2ki")
}

[node name="Apple" type="Node2D"]
script = ExtResource("1_u6n14")

[node name="Sprite2D" type="Sprite2D" parent="."]
texture_filter = 1
material = SubResource("ShaderMaterial_gi34o")
scale = Vector2(1.71429, 1.71429)
texture = ExtResource("2_gi34o")
region_enabled = true
region_rect = Rect2(0, 0, 14, 14)

[node name="Area2D" type="Area2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="Area2D"]
shape = SubResource("RectangleShape2D_ch0ce")

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
&"": SubResource("AnimationLibrary_dqefk")
}

[connection signal="body_entered" from="Area2D" to="." method="_on_area_2d_body_entered"]
