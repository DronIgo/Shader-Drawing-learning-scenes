[gd_scene load_steps=4 format=3 uid="uid://7man5e262w1u"]

[ext_resource type="Texture2D" uid="uid://cmd6jtdofn312" path="res://assets/sprite_pack/Items/Boxes/Box2/Idle.png" id="1_cy5of"]

[sub_resource type="Shader" id="Shader_r37xc"]
code = "shader_type canvas_item;

void vertex() {
	// Called for every vertex the material is visible on.
}

void fragment() {
	//COLOR = vec4(vec3(smoothstep(0.3,0.6,UV.y)),1.0);
	if (abs(1.0 - UV.y - sin(UV.x)) < 0.1){
		//COLOR = vec4(vec3(step((1.0 - UV.y),sin(UV.x))),1.0);
		COLOR = vec4(0.0);
	}
	COLOR = vec4(vec3(1.0-smoothstep(0.0,0.05,abs(1.0 - UV.y - pow(UV.x,2.0)))),1.0);
	// Called for every pixel the material is visible on.
}

//void light() {
//	// Called for every pixel for every light affecting the CanvasItem.
//	// Uncomment to replace the default light processing function with this one.
//}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_tshty"]
shader = SubResource("Shader_r37xc")

[node name="Graf" type="Node2D"]

[node name="Sprite2D" type="Sprite2D" parent="."]
texture_filter = 1
material = SubResource("ShaderMaterial_tshty")
texture = ExtResource("1_cy5of")
